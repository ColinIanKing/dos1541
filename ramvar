.pag 'ramvar'
; common area defines
.skip
	*=$1003
jobs	*=*+15          ; job que
;************trks *=*+15 ; job track table
	*=$1021         ; headers at $1021
hdrs	*=*+120         ; job header
	*=$1099         ;sectors/track table
numsec
	*=$109f
vernum	*=*+1           ;version number
actjob	*=*+1           ;controller's active job
phase	*=*+2           ;stepper base phase
stptrk	*=*+1           ;number of tracks/step
nzones	*=*+1           ;number of density zones
syndly	*=*+1           ;sync delay for pll
wpsw	*=*+2           ;write protect change flag
lwpt	*=*+2           ;last state of wp switch
pbi	*=*+1           ;block identifier
cflg2	*=*+1           ;common flag2
nsides	*=*+1           ;# of sides on diskette
;******* expand common variables here *****
;
	*=$10b0         ;start of track boundaries
maxtrk	;max track # +1
trknum	*=*+8           ;# of 1st track in each...
offset	*=*+8           ;recovery track offset seq.
;...zone, but 1st zone. (reverse)
;permanent address variables
;
	*=$10f0
vnmi	*=*+2           ;indirect for nmi
nmiflg	*=*+1
autofg	*=*+1
secinc	*=*+1           ;sector inc for seq
revcnt	*=*+1           ; error recovery count
.skip
bufs	= $1100         ; start of data bufs
fbufs	= $1d00         ;format download image
.ski 2
;*
;*********************************
;*
;*      zero page variables
;*
;*********************************
;*
	*= $0
usrjmp	*=*+2           ; user jmp table ptr
bmpnt	*=*+2           ; bit map pointer
temp	*=*+6           ; temp work space
ip	*=*+2           ; indirect ptr variable
lsnadr	*=*+1           ; listen address
tlkadr	*=*+1           ;talker address
lsnact	*=*+1           ; active listener flag
tlkact	*=*+1           ; active talker flag 
adrsed	*=*+1           ; addressed flag
prgtrk	*=*+1           ;last prog accessed
drvnum	*=*+1           ;current drive #
track	*=*+1           ;current track
sector	*=*+1           ;current sector
lindx	*=*+1           ;logical index
sa	*=*+1           ;secondary address
orgsa	*=*+1           ;original sa
data	*=*+1           ; temp data byte
;*
;*
t0	=temp
t1	=temp+1
t2	=temp+2
t3	=temp+3
t4	=temp+4
r0	*=*+1
r1	*=*+1
r2	*=*+1
r3	*=*+1
r4	*=*+1
result	*=*+4
accum	*=*+5
dirbuf	*=*+2
;*
;*********************
;*
;*  zero page array
;*
;***********************
;*
buftab	*=*+cbptr+4     ; buffer byte pointers
cb=buftab+cbptr
buf0	*=*+mxchns
buf1	*=*+mxchns
nbkl
recl	*=*+mxchns
nbkh
rech	*=*+mxchns
nr	*=*+mxchns
rs	*=*+mxchns
ss	*=*+mxchns
f1ptr	*=*+1           ; file stream 1 pointer
;
;***********************
; $4300 vars moved to zp
;
recptr	*=*+1
ssnum	*=*+1
ssind	*=*+1
relptr	*=*+1
entsec	*=*+mxfils      ; sector of directory entry
entind	*=*+mxfils      ; index of directory entry
fildrv	*=*+mxfils      ; default flag, drive #
pattyp	*=*+mxfils      ; pattern,replace,closed-flags,type
filtyp	*=*+mxchns      ; channel file type
chnrdy	*=*+mxchns      ; channel status
eoiflg	*=*+1           ; temp eoi
jobnum	*=*+1           ; current job #
lintab	*=*+maxsa+1     ; sa:lindx table
chndat	*=*+mxchns      ; channel data byte
lstchr	*=*+mxchns      ; channel last char ptr
type	*=*+1           ; active file type
;
;*
;*******************
;*
;* ram variables in $4300
;*
;*******************
;*
	*=$4300
cmdbuf	*=*+cmdlen+1
cmdnum	*=*+1           ; command #
strsiz	*=*+1
;zp:  recptr *=*+1
;zp:  ssnum  *=*+1
;zp:  ssind  *=*+1
;zp:  relptr *=*+1
.skip
tempsa	*=*+1           ; temporary sa
;zp:  eoiflg *=*+1           ; temp eoi
cmd	*=*+1           ; temp job command
.skip
lstsec	*=*+1           ; 
bufuse	*=*+2           ; buffer allocation
;zp:  jobnum *=*+1           ; current job #
dskid	*=*+4           ; current disk id's
mdirty	*=*+2           ;bam 0 & 1 dirty flags
entfnd	*=*+1           ;dir-entry found flag
dirlst	*=*+1           ;dir listing flag
cmdwat	*=*+1           ;command waiting flag
linuse	*=*+1           ;lindx use word
lbused	*=*+1           ;last buffer used
rec	*=*+1
trkss	*=*+1
secss	*=*+1
.page
;*
;********************************
;*
;*  ram array area
;*
;********************************
;*
lstjob	*=*+bfcnt+3     ; last job
;zp:  lintab *=*+maxsa+1     ; sa:lindx table
;zp:  chndat *=*+mxchns      ; channel data byte
dsec	*=*+mxchns      ; sector of directory entry
dind	*=*+mxchns      ; index of directory entry
erword	*=*+1           ; error word for recovery
prgdrv	*=*+1           ; last program drive
prgsec	*=*+1           ; last program sector
wlindx	*=*+1           ; write lindx
rlindx	*=*+1           ; read lindx
nbtemp	*=*+2           ; # blocks temp
.skip 3
cmdsiz	*=*+1           ; command string size
char	*=*+1           ; char under parser
limit	*=*+1           ; ptr limit in compar
f1cnt	*=*+1           ; file stream 1 count
f2cnt	*=*+1           ; file stream 2 count
f2ptr	*=*+1           ; file stream 2 pointer
;  parser tables
filtbl	*=*+mxfils+1    ; filename pointer
;zp:   filent *=*+mxfils      ; directory entry
;zp:   fildat *=*+mxfils      ; drive #, pattern
filtrk	*=*+mxfils      ; 1st link/track
filsec	*=*+mxfils      ;         /sector
.skip
;  channel tables
;zp:  filtyp *=*+mxchns ; channel file type
;zp:  chnrdy *=*+mxchns      ; channel status
;zp:   lstchr *=*+mxchns      ; channel last char ptr
.skip
patflg	*=*+1           ; pattern presence flag
image	*=*+1           ; file stream image
drvcnt	*=*+1           ; number of drv searches
drvflg	*=*+1           ; drive search flag
lstdrv	*=*+1           ; last drive w/o error
found	*=*+1           ; found flag in dir searches
dirsec	*=*+1           ; directory sector
delsec	*=*+1           ; sector of 1st avail entry
delind	*=*+1           ; index  "
lstbuf	*=*+1           ; =0 if last block
index	*=*+1           ; current index in buffer
filcnt	*=*+1           ; counter, file entries
typflg	*=*+1           ; match by type flag
mode	*=*+1           ; active file mode (r,w)
;zp:  type   *=*+1           ; active file type
jobrtn	*=*+1           ;job return flag
eptr	*=*+1           ;ptr for recovery
toff	*=*+1           ;total track offset
.ski
;*
;*****************************************
;*
;*   output buffers
;*
;********************************************
;*
	*=$4400-36-36
nambuf	*=*+36          ; directory buffer
errbuf	=* ; error msg buffer
.skip 2
.end
